\documentclass[a4paper, 10pt]{article}

\tableofcontents

<<echo = FALSE, results = 'asis'>>=

	if(landscape)
		cat("\n", "\\usepackage[landscape]{geometry}", "\n", sep = "\n")

@

\begin{document}

<<optionsChunks, echo = FALSE, cache = FALSE, message = FALSE, warning = FALSE>>=

	library(knitr)

	knitr::opts_chunk$set(
		echo = FALSE, 
		message = FALSE,
		cache = FALSE,
		warning = FALSE,
		error = FALSE, # stop-on-error
		results = "asis",
		fig.align = "center",
		fig.path = file.path(outputDir, "figures/")
	)
	
	options(warn = 1, width = 200)
	
@

<<includePlots, echo = FALSE>>=

#	figHeightInches <- sapply(listPlotsPerSubject, getSizeGTable, dim = "height", outputUnit = "inches")
#	figWidthInches <- sapply(listPlotsPerSubject, getSizeGTable, dim = "width", outputUnit = "inches")
	
	figHeightInches <- sapply(listPlotsPerSubject, function(plotSubject)
		# number of lines in plot panel
		attr(plotSubject, "nLinesPlot") * 0.14  + 
		# top (title) and bottom (x-axis) margins for each subplot
		attr(plotSubject, "nSubplots") * 0.14 * 6 # fontsize: 10pt, 1pt = 0.014 in
	)

#	textHeightPt <- ifelse(landscape, 345, 598)
	textWidthInches <- 14 #ifelse(landscape, 598, 345)/72
#	figHeightInches <- paste0("'", round(textHeightPt/figHeightPt, 2), "\\textheight'")
	knitPrintListPlotsKnitr(
		plotsList = listPlotsPerSubject,
		out.width = "'\\\\linewidth'",
		fig.height = figHeightInches,
		fig.width = textWidthInches
	)

@

\end{document}