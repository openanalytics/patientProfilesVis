\documentclass[a4paper, 10pt]{article}

\usepackage{imakeidx}

<<optionsChunks, echo = FALSE, cache = FALSE, message = FALSE, warning = FALSE>>=

	library(knitr)

	knitr::opts_chunk$set(
		echo = FALSE, 
		message = FALSE,
		cache = FALSE,
		warning = FALSE,
		error = FALSE, # stop-on-error
		results = "asis",
		fig.align = "center",
		fig.path = file.path(inputParameters$outputDir, "figures/")
	)
	
	options(warn = 1, width = 200)
	
@

<<indexCustom-makeIndex>>=

	if(!is.null(inputParameters$index$indexMake))
		cat(inputParameters$index$indexMake)

@

\makeindex

% decrease margins: 1.875 inches wide by default on 10pt
<<setMargins>>=
	cat(paste0("\\usepackage[margin=", inputParameters$formatReport$margin, "in]{geometry}\n"))
@


<<specifyLayout>>=

	if(inputParameters$formatReport$landscape)
		cat("\n", "\\usepackage[landscape]{geometry}", "\n", sep = "\n")

@

% make clickeable table of contents
\usepackage{hyperref}
\hypersetup{
    colorlinks,
    citecolor = black,
    filecolor = black,
    linkcolor = black,
    urlcolor = black
}

\begin{document}

%\tableofcontents

\section{Subject}

<<includePlots>>=

	listPlotsPerSubjectList <- inputParameters$listPlotsPerSubject
	
	# convert list of list to list with only one level
	listPlotsPerSubject <- unlist(listPlotsPerSubjectList, recursive = FALSE)
	
	# extract height for each plot
	figHeightInches <- sapply(listPlotsPerSubject, function(plotSubject)
		# number of lines in plot panel
		attr(plotSubject, "nLinesPlot") * inputParameters$formatReport$heightLineIn
	)
	
	# extract labels 
	labelPlots <- names(listPlotsPerSubject)
	
	# extract titles
	sectionTitles <- unlist(lapply(names(listPlotsPerSubjectList), function(subject) 
		c(subject, rep("", length(listPlotsPerSubjectList[[subject]])-1))))

	# extract titles
	bookmarkInfos <- if(!is.null(inputParameters$index))
		unlist(lapply(names(listPlotsPerSubjectList), function(subject) 
			c(inputParameters$index$indexEntry[subject], rep("", length(listPlotsPerSubjectList[[subject]])-1))))
		
#	textHeightPt <- ifelse(landscape, 345, 598)
	textWidthInches <- getWidthPlot(
		margin = inputParameters$formatReport$margin,
		landscape = inputParameters$formatReport$landscape,
		aspectRatio = inputParameters$formatReport$aspectRatio
	)
	#ifelse(landscape, 598, 345)/72
#	figHeightInches <- paste0("'", round(textHeightPt/figHeightPt, 2), "\\textheight'")
	knitPrintListPlotsKnitr(
		plotsList = listPlotsPerSubject,
		out.width = "'\\\\textwidth'",
		fig.height = figHeightInches,
		fig.width = textWidthInches,
		sectionTitles = sectionTitles,
		labels = labelPlots,
		bookmarkInfos = bookmarkInfos
	)
	
@

% add table of contents in 'Index'
%\cleardoublepage
%\phantomsection
%\addcontentsline{toc}{chapter}{\indexname}

<<indexCustom-printIndex>>=

	if(!is.null(inputParameters$index$indexPrint)) {
		cat("\\section{Index}\n")
		cat(inputParameters$index$indexPrint)
	}

@

\printindex

\newpage

\section{Appendix}

\subsection{Session information}

This report was \Sexpr{ifelse(inputParameters$shiny, "automatically generated by a Shiny application", "generated")}
the: \Sexpr{format(Sys.time(), format = "%Y-%m-%d at %H:%M:%S")}.

<<sessionInfo>>=

	sessionInfoTex <- toLatex(sessionInfo())
	# highlight versions of patientProfilesVis and patientProfilesVisShiny packages
	sessionInfoTex <- gsub("(patientProfilesVis[Shiny]*~[^,]*)", "\\\\textbf{\\1}", sessionInfoTex)
	sessionInfoTex <- gsub("(patientVisUtility~[^,]*)", "\\\\textbf{\\1}", sessionInfoTex)
	
	print(sessionInfoTex)
	
@

\end{document}